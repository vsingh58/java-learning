<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>com.myhp</groupId>
    <artifactId>Hadoop-Libs-Learning</artifactId>
    <packaging>jar</packaging>
    <version>2.0</version>
    <!--if the property name is null, the artifactId will be used-->
    <name>${artifactId}-name</name>
    <description>To Learn the Hadoop 1.x Libraraies</description>
    <url>http://maven.apache.org</url>
    <properties>
        <junit.scope>test</junit.scope>
        <maven.test.skip>true</maven.test.skip>
    </properties>
    <dependencies>
        <dependency>
            <groupId>org.apache.hadoop</groupId>
            <artifactId>hadoop-core</artifactId>
            <version>1.2.1</version>
        </dependency>
        <dependency>
            <groupId>commons-cli</groupId>
            <artifactId>commons-cli</artifactId>
            <version>1.2</version>
            <!--err: class file for org.apache.commons.cli.Options not found when compile WordCount-->
            <!--1. refer: http://www.homolog.us/blogs/blog/2011/09/05/hadoop-example-faq/
            javac -classpath /home/ubuntu/hadoop-1.0.4/hadoop-core-1.0.4.jar:/home/ubuntu/hadoop-1.0.4/lib/commons-cli-1.2.jar -d bin WordCount.java-->
            <!--2. add the commons-cli in the pom.xml although it has been existed as a dependency in hadoop-core-->
        </dependency>
        <dependency>
            <groupId>com.beust</groupId>
            <artifactId>jcommander</artifactId>
            <version>1.7</version>
        </dependency>
        <dependency>
            <groupId>org.json</groupId>
            <artifactId>json</artifactId>
            <version>20140107</version>
        </dependency>
        <dependency>
            <groupId>commons-logging</groupId>
            <artifactId>commons-logging</artifactId>
            <version>1.1.1</version>
        </dependency>
        <dependency>
            <groupId>org.apache.hadoop</groupId>
            <artifactId>hadoop-common</artifactId>
            <version>2.2.0</version>
            <!--java.lang.NoClassDefFoundError: org/apache/commons/configuration/Configuration-->
        </dependency>
        <!--<dependency>-->
        <!--depended by hadoop-common-->
        <!--<groupId>commons-codec</groupId>-->
        <!--<artifactId>commons-codec</artifactId>-->
        <!--<version>1.4</version>-->
        <!--</dependency>-->
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>4.11</version>
            <scope>${junit.scope}</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.hadoop</groupId>
            <artifactId>hadoop-test</artifactId>
            <version>1.2.1</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.hamcrest</groupId>
            <artifactId>hamcrest-all</artifactId>
            <version>1.3</version>
            <scope>test</scope>
        </dependency>
    </dependencies>
    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.1</version>
                <configuration>
                    <source>1.7</source>
                    <target>1.7</target>
                    <compilerArgs>
                        <compilerArgument>-Xlint:deprecation</compilerArgument>
                        <compilerArgument>-Xlint:unchecked</compilerArgument>
                    </compilerArgs>
                    <!--<fork>true</fork>-->
                    <!--<meminitial>128m</meminitial>-->
                    <!--<maxmem>512m</maxmem>-->
                </configuration>
            </plugin>
            <!--<plugin>                   &lt;!&ndash;javadoc tool is called&ndash;&gt;-->
            <!--<groupId>org.apache.maven.plugins</groupId>-->
            <!--<artifactId>maven-source-plugin</artifactId>-->
            <!--<version>2.2.1</version>-->
            <!--<executions>-->
            <!--<execution>-->
            <!--<goals>-->
            <!--<goal>jar-no-fork</goal>-->
            <!--</goals>-->
            <!--</execution>-->
            <!--</executions>-->
            <!--</plugin>-->
            <!--<plugin>                   &lt;!&ndash;it will archive those java files to *source.jar&ndash;&gt;-->
            <!--<groupId>org.apache.maven.plugins</groupId>-->
            <!--<artifactId>maven-javadoc-plugin</artifactId>-->
            <!--<version>2.9.1</version>-->
            <!--<executions>-->
            <!--<execution>-->
            <!--<goals>-->
            <!--<goal>jar</goal>-->
            <!--</goals>-->
            <!--</execution>-->
            <!--</executions>-->
            <!--</plugin>-->
            <plugin>
                <!--https://maven.apache.org/guides/introduction/introduction-to-the-lifecycle.html-->
                <!--there are 3 lifecycles: clean, default and site. which are executed in the order given up to the point of the one specified.-->
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-site-plugin</artifactId>
                <version>3.2</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>jar</goal>
                        </goals>
                        <phase>site</phase>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
</project>
